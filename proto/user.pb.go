// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user.proto

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAllRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAllRequest) Reset()         { *m = GetAllRequest{} }
func (m *GetAllRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllRequest) ProtoMessage()    {}
func (*GetAllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{0}
}

func (m *GetAllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllRequest.Unmarshal(m, b)
}
func (m *GetAllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllRequest.Marshal(b, m, deterministic)
}
func (m *GetAllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllRequest.Merge(m, src)
}
func (m *GetAllRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllRequest.Size(m)
}
func (m *GetAllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllRequest proto.InternalMessageInfo

type GetByNameRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByNameRequest) Reset()         { *m = GetByNameRequest{} }
func (m *GetByNameRequest) String() string { return proto.CompactTextString(m) }
func (*GetByNameRequest) ProtoMessage()    {}
func (*GetByNameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{1}
}

func (m *GetByNameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByNameRequest.Unmarshal(m, b)
}
func (m *GetByNameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByNameRequest.Marshal(b, m, deterministic)
}
func (m *GetByNameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByNameRequest.Merge(m, src)
}
func (m *GetByNameRequest) XXX_Size() int {
	return xxx_messageInfo_GetByNameRequest.Size(m)
}
func (m *GetByNameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByNameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByNameRequest proto.InternalMessageInfo

func (m *GetByNameRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type User struct {
	Alias                string   `protobuf:"bytes,1,opt,name=alias,proto3" json:"alias,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Job                  string   `protobuf:"bytes,4,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetAlias() string {
	if m != nil {
		return m.Alias
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetJob() string {
	if m != nil {
		return m.Job
	}
	return ""
}

type UserResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{3}
}

func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (m *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(m, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type GenericResponse struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GenericResponse) Reset()         { *m = GenericResponse{} }
func (m *GenericResponse) String() string { return proto.CompactTextString(m) }
func (*GenericResponse) ProtoMessage()    {}
func (*GenericResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d570e3e37e5899c5, []int{4}
}

func (m *GenericResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GenericResponse.Unmarshal(m, b)
}
func (m *GenericResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GenericResponse.Marshal(b, m, deterministic)
}
func (m *GenericResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GenericResponse.Merge(m, src)
}
func (m *GenericResponse) XXX_Size() int {
	return xxx_messageInfo_GenericResponse.Size(m)
}
func (m *GenericResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GenericResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GenericResponse proto.InternalMessageInfo

func (m *GenericResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*GetAllRequest)(nil), "user.GetAllRequest")
	proto.RegisterType((*GetByNameRequest)(nil), "user.GetByNameRequest")
	proto.RegisterType((*User)(nil), "user.User")
	proto.RegisterType((*UserResponse)(nil), "user.UserResponse")
	proto.RegisterType((*GenericResponse)(nil), "user.GenericResponse")
}

func init() { proto.RegisterFile("proto/user.proto", fileDescriptor_d570e3e37e5899c5) }

var fileDescriptor_d570e3e37e5899c5 = []byte{
	// 295 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcb, 0x4e, 0xc3, 0x30,
	0x10, 0xec, 0x23, 0x6d, 0xc9, 0x16, 0xd4, 0x68, 0x79, 0x28, 0x8a, 0x38, 0x54, 0x3e, 0xa0, 0x4a,
	0x48, 0x01, 0xda, 0x2f, 0x28, 0x42, 0xca, 0x09, 0x0e, 0x41, 0xfd, 0x00, 0xb7, 0x59, 0x20, 0xc8,
	0x4d, 0x82, 0xed, 0x22, 0xf1, 0x0d, 0xfc, 0x34, 0xb2, 0xf3, 0x20, 0x39, 0xf6, 0x36, 0xbb, 0xe3,
	0xd9, 0xd9, 0x1d, 0x19, 0xbc, 0x42, 0xe6, 0x3a, 0xbf, 0x3b, 0x28, 0x92, 0xa1, 0x85, 0xe8, 0x18,
	0xcc, 0x66, 0x70, 0x16, 0x91, 0x5e, 0x0b, 0x11, 0xd3, 0xd7, 0x81, 0x94, 0x66, 0x37, 0xe0, 0x45,
	0xa4, 0x1f, 0x7f, 0x5e, 0xf8, 0x9e, 0xaa, 0x1e, 0x22, 0x38, 0x19, 0xdf, 0x93, 0xdf, 0x9f, 0xf7,
	0x17, 0x6e, 0x6c, 0x31, 0xfb, 0x00, 0x67, 0xa3, 0x48, 0xe2, 0x05, 0x8c, 0xb8, 0x48, 0xb9, 0xaa,
	0xc8, 0xb2, 0xc0, 0x6b, 0x70, 0xdf, 0x52, 0xa9, 0xb4, 0x99, 0xe2, 0x0f, 0x2c, 0xf3, 0xdf, 0xc0,
	0x00, 0x4e, 0x04, 0xaf, 0xc8, 0xa1, 0x25, 0x9b, 0x1a, 0x3d, 0x18, 0x7e, 0xe6, 0x5b, 0xdf, 0xb1,
	0x6d, 0x03, 0xd9, 0x3d, 0x9c, 0x1a, 0xa7, 0x98, 0x54, 0x91, 0x67, 0x8a, 0x70, 0x0e, 0x23, 0xb3,
	0xba, 0x71, 0x1c, 0x2e, 0xa6, 0x4b, 0x08, 0xed, 0x51, 0xf6, 0x49, 0x49, 0xb0, 0x5b, 0x98, 0x45,
	0x94, 0x91, 0x4c, 0x77, 0x8d, 0xc8, 0x87, 0xc9, 0x33, 0x29, 0xc5, 0xdf, 0xeb, 0x2b, 0xea, 0x72,
	0xf9, 0x3b, 0x80, 0xa9, 0x11, 0xbf, 0x92, 0xfc, 0x4e, 0x77, 0x84, 0x2b, 0x18, 0x97, 0x89, 0xe0,
	0x79, 0x39, 0xb9, 0x93, 0x4f, 0x80, 0x2d, 0xbb, 0x6a, 0x38, 0xeb, 0xe1, 0x03, 0xb8, 0x4d, 0x6a,
	0x78, 0xd5, 0xe8, 0x3a, 0x31, 0x06, 0xad, 0x4d, 0x59, 0x0f, 0x43, 0x98, 0xac, 0x93, 0xc4, 0x66,
	0xd8, 0x22, 0x82, 0xcb, 0x5a, 0xdc, 0xd9, 0xdf, 0x5a, 0xc0, 0xa6, 0x48, 0xb8, 0xa6, 0xa3, 0x24,
	0x4f, 0x24, 0xe8, 0x08, 0xc9, 0x76, 0x6c, 0x3f, 0xc7, 0xea, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xf5,
	0x10, 0xc4, 0x51, 0x30, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for UserService service

type UserServiceClient interface {
	// Queries
	GetAll(ctx context.Context, in *GetAllRequest, opts ...client.CallOption) (*UserResponse, error)
	GetByName(ctx context.Context, in *GetByNameRequest, opts ...client.CallOption) (*User, error)
	// Commands
	AddUser(ctx context.Context, in *User, opts ...client.CallOption) (*GenericResponse, error)
	UpdateUser(ctx context.Context, in *User, opts ...client.CallOption) (*GenericResponse, error)
	DeleteUser(ctx context.Context, in *User, opts ...client.CallOption) (*GenericResponse, error)
}

type userServiceClient struct {
	c           client.Client
	serviceName string
}

func NewUserServiceClient(serviceName string, c client.Client) UserServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "user"
	}
	return &userServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *userServiceClient) GetAll(ctx context.Context, in *GetAllRequest, opts ...client.CallOption) (*UserResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetAll", in)
	out := new(UserResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetByName(ctx context.Context, in *GetByNameRequest, opts ...client.CallOption) (*User, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.GetByName", in)
	out := new(User)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddUser(ctx context.Context, in *User, opts ...client.CallOption) (*GenericResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.AddUser", in)
	out := new(GenericResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *User, opts ...client.CallOption) (*GenericResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.UpdateUser", in)
	out := new(GenericResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *User, opts ...client.CallOption) (*GenericResponse, error) {
	req := c.c.NewRequest(c.serviceName, "UserService.DeleteUser", in)
	out := new(GenericResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceHandler interface {
	// Queries
	GetAll(context.Context, *GetAllRequest, *UserResponse) error
	GetByName(context.Context, *GetByNameRequest, *User) error
	// Commands
	AddUser(context.Context, *User, *GenericResponse) error
	UpdateUser(context.Context, *User, *GenericResponse) error
	DeleteUser(context.Context, *User, *GenericResponse) error
}

func RegisterUserServiceHandler(s server.Server, hdlr UserServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&UserService{hdlr}, opts...))
}

type UserService struct {
	UserServiceHandler
}

func (h *UserService) GetAll(ctx context.Context, in *GetAllRequest, out *UserResponse) error {
	return h.UserServiceHandler.GetAll(ctx, in, out)
}

func (h *UserService) GetByName(ctx context.Context, in *GetByNameRequest, out *User) error {
	return h.UserServiceHandler.GetByName(ctx, in, out)
}

func (h *UserService) AddUser(ctx context.Context, in *User, out *GenericResponse) error {
	return h.UserServiceHandler.AddUser(ctx, in, out)
}

func (h *UserService) UpdateUser(ctx context.Context, in *User, out *GenericResponse) error {
	return h.UserServiceHandler.UpdateUser(ctx, in, out)
}

func (h *UserService) DeleteUser(ctx context.Context, in *User, out *GenericResponse) error {
	return h.UserServiceHandler.DeleteUser(ctx, in, out)
}
